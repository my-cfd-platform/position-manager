syntax = "proto3";
package position_manager_persistence;
import "google/protobuf/empty.proto";

enum PositionManagerPersistencePositionSide{
    Buy = 0;
    Sell = 1;
}

message PositionManagerPersistenceBidAsk{
    string AssetPair = 1;
    double Bid = 2;
    double Ask = 3;
    uint64 DateTimeUnixTimestampMilis = 4;
    string Base = 5;
    string Quote = 6;
}

message PositionManagerPersistenceActivePositionGrpcModel{
    string Id = 1;
    string AccountId = 2;
    string TraderId = 3;
    string AssetPair = 4;
    PositionManagerPersistencePositionSide Side = 5;
    double InvestAmount = 6;
    double Leverage = 7;
    double StopOutPercent = 8;
    string CreateProcessId = 9;
    uint64 CreateDateUnixTimestampMilis = 10;
    string LastUpdateProcessId = 11;
    uint64 LastUpdateDate = 12;
    optional double TpInProfit = 13;
    optional double SlInProfit = 14;
    optional double TpInAssetPrice = 15;
    optional double SlInAssetPrice = 16;
    string Collateral = 17;
    string Base = 18;
    string Quote = 19;

    double AssetOpenPrice = 20;
    PositionManagerPersistenceBidAsk AssetOpenBidAsk = 21;

    double CollateralBaseOpenPrice = 22;
    PositionManagerPersistenceBidAsk CollateralBaseOpenBidAsk = 23;

    string OpenProcessId = 24;
    uint64 OpenDateUnixTimestampMilis = 25;

    repeated PositionManagerPersistenceActivePositionSwap Swaps = 26;
}

message PositionManagerPersistenceActivePositionSwap{
    double Amount = 1;
    uint64 DateTimeUnixTimestampMilis = 2;
}

service PositionManagerPersistenceGrpcService {
    rpc GetActivePositions(google.protobuf.Empty) returns (stream PositionManagerPersistenceActivePositionGrpcModel);
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}

// pub id: String,
// pub trader_id: String,
// pub account_id: String,
// pub asset_pair: String,
// pub side: PositionSide,
// pub invest_amount: f64,
// pub leverage: f64,
// pub stop_out_percent: f64,
// pub create_process_id: String,
// pub create_date: DateTimeAsMicroseconds,
// pub last_update_process_id: String,
// pub last_update_date: DateTimeAsMicroseconds,
// pub take_profit_in_position_profit: Option<f64>,
// pub take_profit_in_asset_price: Option<f64>,
// pub stop_loss_in_position_profit: Option<f64>,
// pub stop_loss_in_asset_price: Option<f64>,

// pub collateral_currency: String,
// pub base: String,
// pub quote: String,
// pub asset_open_price: f64,
// pub asset_open_bid_ask: T,
// pub collateral_base_open_price: f64,
// pub collateral_base_open_bid_ask: Option<T>,
// pub open_process_id: String,
// pub open_date: DateTimeAsMicroseconds,
// pub asset_last_price: f64,
// pub asset_last_bid_ask: T,
// pub collateral_quote_last_price: f64,
// pub collateral_quote_last_bid_ask: Option<T>,
// pub profit: f64,
// pub pending_state: Option<PendingPositionState>,